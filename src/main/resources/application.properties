%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# WARNING - change this to 'update' ASAP (drop and create required for import.sql to work, import.sql will be removed once the TAP_SCHEMA library is cadded)
#%prod.quarkus.hibernate-orm.database.generation=update
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.database.generation.halt-on-error=false
quarkus.hibernate-orm.quote-identifiers = true

# Error logging
#quarkus.log.level=DEBUG
#quarkus.log.console.enable=true
#quarkus.naming.enable-jndi=true
#quarkus.log.category."org.uksrc.archive.utils".level=DEBUG

quarkus.http.root-path=/archive

# NOTE: DEV only - fixed port (jdbc url actually) required for TAP service
# Only added to stop random port allocation of postgres container each time app starts
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.port=5432

quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus
%dev.quarkus.datasource.username=quarkus
%dev.quarkus.datasource.password=quarkus

%prod.quarkus.datasource.jdbc.url=${DB_URL}
# quarkus.datasource.jdbc.max-size=20
%prod.quarkus.datasource.username=${DB_USERNAME}
%prod.quarkus.datasource.password=${DB_PASSWORD}

#Kubernetes
quarkus.container-image.builder=docker
quarkus.container-image.name=archive-service
#quarkus.container-image.registry=

# pull-policy never for local (minikube etc.) auto-deployment
quarkus.kubernetes.image-pull-policy=Never
quarkus.container-image.push=false

#Change this for deployment at build time (could do with a k8s specific build so it will always build even if a docker service isn't running).
quarkus.kubernetes.deploy=false

quarkus.container-image.tag=latest
quarkus.container-image.build=true

#Needs prod values entering for release versions as ${DB_URL} values don't make it into the generated yaml file.
quarkus.kubernetes.env-vars.DB_URL.value=jdbc:postgresql://localhost:5432/quarkus
quarkus.kubernetes.env-vars.DB_USERNAME.value=quarkus
quarkus.kubernetes.env-vars.DB_PASSWORD.value=quarkus

%kubernetes.quarkus.datasource.jdbc.url=${DB_URL}
%kubernetes.quarkus.datasource.username=${DB_USERNAME}
%kubernetes.quarkus.datasource.password=${DB_PASSWORD}
#quarkus.kubernetes.namespace=archive-service
//quarkus.hibernate-orm.*.log.sql=true
//Add to display generated SQL via hibernate
//quarkus.hibernate-orm.log.sql=true
//quarkus.hibernate-orm.log.bind-parameters=true
jakarta.persistence.create-database-schemas=true