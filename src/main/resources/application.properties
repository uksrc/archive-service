%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.database.generation.halt-on-error=false
quarkus.hibernate-orm.quote-identifiers = true

# Error logging
#quarkus.log.level=DEBUG
#quarkus.log.console.enable=true
#quarkus.naming.enable-jndi=true
#quarkus.log.category."org.uksrc.archive.utils".level=DEBUG


# NOTE: DEV only - fixed port (jdbc url actually) required for TAP service
# Only added to stop random port allocation of postgres container each time app starts
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.port=5432

quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres-service:5432/quarkus
# quarkus.datasource.jdbc.max-size=20
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus

#Kubernetes
quarkus.container-image.builder=docker
quarkus.container-image.name=archive-service
#quarkus.container-image.registry=

# pull-policy never for local (minikube etc.) auto-deployment
quarkus.kubernetes.image-pull-policy=Never
quarkus.container-image.push=false

#Change this for deployment at build time (could do with a k8s specific build so it will always build even if a docker service isn't running).
quarkus.kubernetes.deploy=false

quarkus.container-image.tag=latest
quarkus.container-image.build=false             //Change this for deployment at build time.

quarkus.kubernetes.env.vars.DB_URL=jdbc:postgresql://postgres-service:5432/quarkus
quarkus.kubernetes.env.vars.DB_USERNAME=quarkus
quarkus.kubernetes.env.vars.DB_PASSWORD=quarkus

%kubernetes.quarkus.datasource.jdbc.url=${DB_URL}
%kubernetes.quarkus.datasource.username=${DB_USERNAME}
%kubernetes.quarkus.datasource.password=${DB_PASSWORD}

# SKA-IAM Details
quarkus.oidc.auth-server-url=https://ska-iam.stfc.ac.uk
quarkus.oidc.client-id=${OIDC_CLIENT_ID}
quarkus.oidc.credentials.secret=${OIDC_CLIENT_SECRET}
quarkus.oidc.application-type=service
quarkus.oidc.roles.source=accesstoken
quarkus.oidc.groups-claim=groups

%dev.quarkus.log.category."io.quarkus.oidc".level=DEBUG
# Only required when generating bearer tokens locally in dev mode
%dev.authentication.callback=http://localhost:8080/auth-callback


# Disable auth restrictions when running in dev mode
#%prod.quarkus.oidc.enabled=true
#%prod.quarkus.security.auth.enabled-in-dev-mode=true
#quarkus.oidc.enabled=false
#quarkus.security.auth.enabled-in-dev-mode=false

# Enable security in production for APIs
%prod.quarkus.http.auth.permission.authenticated.policy=authenticated
%prod.quarkus.http.auth.permission.authenticated.paths=observations/*,collections/*
# Allow access to web pages
%prod.quarkus.http.auth.permission.public.paths=/*
%prod.quarkus.http.auth.permission.public.policy=permit

# Disable security in dev and test
%dev.quarkus.http.auth.permission.public.policy=permit
%dev.quarkus.http.auth.permission.public.paths=/*
%test.quarkus.http.auth.permission.public.policy=permit
%test.quarkus.http.auth.permission.public.paths=/*

